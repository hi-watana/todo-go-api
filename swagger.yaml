swagger: "2.0"
info:
  description: "This is a simple -- even too simple -- API implemented by Go."
  version: "1.0.0"
  title: "Todo API with GO"
host: "localhost:8080"
#basePath: "/v1"
tags:
- name: "notes"
  description: "Everything about your notes"
schemes:
- "http"
paths:
  /notes:
    get:
      tags:
      - "notes"
      summary: "Find all notes"
      description: "Returns all notes"
      operationId: "getNotes"
      produces:
      - "application/json"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: array
            items:
              $ref: "#/definitions/Note"
    post:
      tags:
      - "notes"
      summary: "Add a new note"
      description: ""
      operationId: "addNote"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Note object that needs to be added"
        required: true
        schema:
          $ref: "#/definitions/Note"
      responses:
        "200":
          description: "Successfully added"
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: "Invalid input"
          schema:
            $ref: "#/definitions/ApiResponse"
     
  /notes/{noteId}:
    get:
      tags:
      - "notes"
      summary: "Find note by ID"
      description: "Returns a single note"
      operationId: "getNoteById"
      produces:
      - "application/json"
      parameters:
      - name: "noteId"
        in: "path"
        description: "ID of note to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Note"
        "400":
          description: "Invalid ID supplied"
          schema:
            $ref: "#/definitions/ApiResponse"
        "404":
          description: "Note not found"
          schema:
            $ref: "#/definitions/ApiResponse"
          
    put:
      tags:
      - "notes"
      summary: "Update an existing note"
      description: ""
      operationId: "updateNote"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "noteId"
        in: "path"
        description: "ID of note to return"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Note object that needs to be added"
        required: true
        schema:
          $ref: "#/definitions/Note"
      responses:
        "200":
          description: "Successfully updated"
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: "Invalid ID or request body supplied"
          schema:
            $ref: "#/definitions/ApiResponse"
        "404":
          description: "Note not found"
          schema:
            $ref: "#/definitions/ApiResponse"
    
    delete:
      tags:
      - "notes"
      summary: "Deletes a note"
      description: ""
      operationId: "deleteNote"
      produces:
      - "application/json"
      parameters:
      - name: "noteId"
        in: "path"
        description: "Note id to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Successfully deleted"
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: "Invalid ID supplied"
          schema:
            $ref: "#/definitions/ApiResponse"
        "404":
          description: "Note not found"
          schema:
            $ref: "#/definitions/ApiResponse"
  
definitions:
  Note:
    type: "object"
    required:
    - "name"
    - "photoUrls"
    properties:
      id:
        type: "integer"
        format: "int64"
      title:
        type: "string"
        example: "Eat Four Bananas in a Day"
      content:
        type: "string"
        example: "It might be too much for me.."
  ApiResponse:
    type: "object"
    properties:
      status:
        type: "integer"
        format: "int32"
      message:
        type: "string"